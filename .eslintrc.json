{
  "plugins": ["prettier", "babel", "react", "react-native"],
  "extends": [
    "eslint:all",
    "plugin:react/all",
    "plugin:react-native/all",
    "prettier"
  ],
  "parser": "babel-eslint",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "env": {
    "react-native/react-native": true,
    "node": true,
    "es6": true
  },
  "rules": {
    "prettier/prettier": "error",
    "strict": "off",
    "id-length": "off",
    "no-console": "off",
    "max-statements": "off",
    "global-require": "off",
    "one-var": "off",
    "max-lines-per-function": "off",
    "no-underscore-dangle": "off",
    "no-implicit-coercion": "off",
    "no-magic-numbers": "off",
    "no-negated-condition": "off",
    "capitalized-comments": "off",
    "max-params": "off",
    "multiline-comment-style": "off",
    "spaced-comment": "off",
    "no-inline-comments": "off",
    "sort-keys": "off",
    "sort-imports": "off",
    "max-lines": "off",
    "prefer-template": "off",
    "callback-return": "off",
    "no-ternary": "off",
    "no-invalid-this": "off",
    "babel/no-invalid-this": "error",
    "complexity": "off",
    "yoda": "off",
    "prefer-promise-reject-errors": "off",
    "line-comment-position": "off",
    "camelcase": "off",
    "consistent-return": "off",
    "no-shadow": "off",
    "no-empty-function": "off",
    // we something need to pass undefined as a prop
    "no-undefined": "off",
    // typescript now handles this
    "default-case": "off",
    // regexp is hard
    "prefer-named-capture-group": "off",
    "require-unicode-regexp": "off",
    "react/no-set-state": "off",
    // unsensical rule, setState inside didUpdate is a common pattern
    "react/no-did-update-set-state": "off",
    "react/prop-types": "off",
    "react/jsx-indent": "off",
    "react/jsx-no-literals": "off",
    "react/jsx-max-props-per-line": "off",
    "react/jsx-sort-props": "off",
    "react/jsx-sort-default-props": "off",
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-max-depth": "off",
    "react/jsx-handler-names": "off",
    "react/jsx-indent-props": "off",
    "react/jsx-pascal-case": "off",
    "react/jsx-filename-extension": "off",
    "react/forbid-component-props": "off",
    "react/destructuring-assignment": "off",
    "react/state-in-constructor": "off",
    // React docs say this is ok
    "react/no-did-mount-set-state": "off",
    // we don't abuse this rule
    "react/no-multi-comp": "off",
    "react/require-optimization": "off",
    // not sure of this rule, hampers readability a lot.
    "react/no-unescaped-entities": "off",
    "react-native/sort-styles": "off",
    "react-native/split-platform-components": "off",
    "react/jsx-fragments": "off",
    // good rule but it's currently broken
    "react/sort-comp": "off",
    "react/display-name": "off",
    "react/prefer-stateless-function": "off",
    "react/sort-prop-types": "off",
    "react/forbid-prop-types": "off",
    "react-native/no-color-literals": "off",
    "no-use-before-define": "off",
    "new-cap": "off",
    "babel/new-cap": "off",
    "babel/camelcase": "off",
    "object-curly-spacing": "off",
    "babel/object-curly-spacing": "off",
    "quotes": "off",
    "babel/quotes": "off",
    "class-methods-use-this": "off",
    "semi": "off",
    "babel/semi": "off",
    "no-unused-expressions": "off",
    // typescript does this
    "no-unused-vars": "off",
    "babel/no-unused-expressions": ["error", { "allowShortCircuit": true }],
    "valid-typeof": "off",
    "babel/valid-typeof": 1,
    // needed for redux reducers function arguments
    "default-param-last": 1,
    "no-warning-comments": "off"
  },
  "settings": {
    "react": {
      "version": "^16.10.2"
    }
  }
}
